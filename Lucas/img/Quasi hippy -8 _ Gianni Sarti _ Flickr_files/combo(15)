YUI.add("flickr-photos-deleteNote-deletor",function(e,o){"use strict";e.namespace("ModelDeletors")["flickr-photos-deleteNote"]={run:function(t,r){var l={note_id:t};return r.callAPI("flickr.photos.notes.delete",l).then(null,e.FetcherErrorLogger(o))}}},"@VERSION@",{requires:["flickr-promise"],optional:[]});YUI.add("note-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{create:function(t){return e.ModelCreators["flickr-photos-addNotes"].run(t,this.appContext)},update:function(t,r){var n;return n={noteId:t,noteX:this.getValue(t,"left"),noteY:this.getValue(t,"top"),noteW:this.getValue(t,"width"),noteH:this.getValue(t,"height"),noteText:this.getValue(t,"text")},e.ModelUpdaters["flickr-photos-editNote"].run(n,this.appContext)},delete:function(t){return e.ModelDeletors["flickr-photos-deleteNote"].run(t,this.appContext)}},attributes:{author:{setter:function(e){return e}},authorName:{setter:function(e){return e}},authorRealName:{setter:function(e){return e}},authorIsPro:{defaultValue:!1,setter:function(t){return e.AttributeHelpers.coerceBoolean(t)}},authorProBadge:{defaultValue:"standard",setter:function(t){return e.AttributeHelpers.coerceString(t)}},authorIsDeleted:{defaultValue:!1,setter:function(t){return e.AttributeHelpers.coerceBoolean(t)}},left:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},top:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},width:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},height:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},text:{setter:function(e){return e}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-photos-addNotes-creator","flickr-photos-editNote-updater","flickr-photos-deleteNote-deletor","attribute-helpers"]});YUI.add("flickr-photos-deleteAutotags-deletor",function(e,t){"use strict";e.namespace("ModelDeletors")["flickr-photos-deleteAutotags"]={run:function(o,r){return r.callAPI("flickr.photos.deleteAutotags",o).then(null,e.FetcherErrorLogger(t))}}},"@VERSION@",{requires:["flickr-promise"],optional:[]});YUI.add("autotag-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{delete:function(t){return e.ModelDeletors["flickr-photos-deleteAutotags"].run(t,this.appContext)}},attributes:{autotagValue:{validator:function(t){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)}},score:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},isPrivate:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},searchUrl:{derivedBy:["autotagValue"],readOnly:!0,defaultFn:function(e){return"/search/?q="+this.getValue(e,"autotagValue")}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-photos-deleteAutotags-deletor"]});YUI.add("photo-autotags-models",function(t){function e(t){e.superclass.constructor.call(this,t)}t.Models[this.name]=e,t.extend(e,t.FlickrModelRegistry,{name:this.name,remote:{delete:function(e){return t.ModelDeletors["flickr-photos-deleteAutotags"].run(e,this.appContext)}},attributes:{autotags:{isCollection:!0}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-photos-deleteAutotags-deletor"]});YUI.add("flickr-photos-getInfo-fetcher",function(o,e){"use strict";o.namespace("ModelFetchers")["flickr-photos-getInfo"]={run:function(t,s){var r,i=this;return s.flipper.isFlipped("enable-scrappy-photo-page")&&(t.scrappy=!0),r=this._processParams(t),new o.FlickrPromise({apiResponse:s.callAPI("flickr.photos.getInfo",r,!0),photoRegistry:s.getModelRegistry("photo-models"),personRegistry:s.getModelRegistry("person-models"),personRelationshipRegistry:s.getModelRegistry("person-relationship-models"),photoEngagementRegistry:s.getModelRegistry("photo-engagement-models"),photoStatsRegistry:s.getModelRegistry("photo-stats-models"),photoPrivacyRegistry:s.getModelRegistry("photo-privacy-models"),photoNotesRegistry:s.getModelRegistry("photo-notes-models"),noteRegistry:s.getModelRegistry("note-models"),photoGeoRegistry:s.getModelRegistry("photo-geo-models"),photoLocationRegistry:s.getModelRegistry("photo-location-models"),photoHeadMetaRegistry:s.getModelRegistry("photo-head-meta-models"),groupRegistry:s.getModelRegistry("group-models"),contextsRegistry:s.getModelRegistry("photo-contexts-models"),favoriteRegistry:s.getModelRegistry("favorite-models"),galleryRegistry:s.getModelRegistry("gallery-models"),groupsPoolRegistry:s.getModelRegistry("group-pool-models"),setRegistry:s.getModelRegistry("set-models"),photostreamRegistry:s.getModelRegistry("photostream-models")}).then(function(o){return i._processResponse(o,s.flipper,r)},o.FetcherErrorLogger(e))},_processParams:function(e){var t,s;return t=["sizes","icon_urls","ignored","rev_ignored","rev_contacts","venue","datecreate"].join(","),t=t+","+o.APIHelper.request.getRebootPhotoExtras(),s={datecreate:1,extras:t,photo_id:e.id,get_contexts:1,primary_photo_extras:"url_sq, url_t, url_s, url_m"},e.userId?s.user_id=e.userId:e.pathAlias&&(s.path_alias=e.pathAlias),e.context&&(s.context=e.context,s.num_prev=1,s.num_next=1),e.scrappy&&(o.APIHelper.request.addStaticMapsParams(s),delete s.get_contexts,delete s.primary_photo_extras,delete s.context),s},_processResponse:function(e,t,s){var r,i,p,n,a,h,d,l,g,c,y=e.apiResponse,m=e.photoRegistry,u=e.personRegistry,R=e.personRelationshipRegistry,M=e.photoEngagementRegistry,f=e.photoStatsRegistry,w=e.photoPrivacyRegistry,v=e.photoNotesRegistry,T=e.noteRegistry,x=e.photoGeoRegistry,A=e.photoLocationRegistry,H=e.photoHeadMetaRegistry,_=e.groupRegistry,P={},k=[];if(!y.photo.sizes)throw new Error("Missing photo sizes from flickr.photos.getInfo call.");i={id:y.photo.id,title:y.photo.title.content,description:y.photo.description.content,sizes:o.APIHelper.response.parsePhotoSize(y.photo.sizes.size,!0),needsInterstitial:y.photo.needsInterstitial,canComment:y.photo.editability.cancomment,canPublicComment:y.photo.publiceditability.cancomment,canAddMeta:y.photo.editability.canaddmeta,safetyLevel:y.photo.safetyLevel,license:y.photo.license,mediaType:y.photo.media,secret:y.photo.secret,isHD:o.APIHelper.response.isHD(y.photo.sizes.size),rotation:y.photo.rotation,oWidth:y.photo.oWidth?parseInt(y.photo.oWidth,10):"",oHeight:y.photo.oHeight?parseInt(y.photo.oHeight,10):"",visibilitySource:y.photo.visibilitySource,isVideoPending:y.photo.video?y.photo.video.pending:0,isVideoFailed:y.photo.video?y.photo.video.failed:0},p={id:y.photo.owner.nsid,username:y.photo.owner.username,realname:y.photo.owner.realname,pathAlias:y.photo.owner.pathAlias,buddyicon:o.APIHelper.response.removeProtocolFromURL(y.photo.owner.iconurls),isAdFree:y.photo.owner.isAdFree,isPro:y.photo.owner.ispro,proBadge:y.photo.owner.proBadge,dateCreated:y.photo.owner.datecreate,location:y.photo.owner.location},n={id:y.photo.owner.nsid,pathAlias:y.photo.owner.pathAlias,isContact:y.photo.contactIscontact,isFamily:y.photo.contactIsfamily,isFriend:y.photo.contactIsfriend,isIgnored:y.photo.owner.isignored,isIgnoredBy:y.photo.owner.revIgnored,isRevContact:y.photo.owner.revContact,isRevFamily:y.photo.owner.revFamily,isRevFriend:y.photo.owner.revFriend},a={id:y.photo.id,ownerNsid:y.photo.owner.nsid,isFaved:y.photo.isfavorite||!1,canShare:y.photo.usage.canshare,canDownload:y.photo.usage.candownload,commentCount:y.photo.comments.content,noteCount:y.photo.notes&&y.photo.notes.note&&y.photo.notes.note.length,faveCount:y.photo.countFaves,viewCount:y.photo.views},h={id:y.photo.id,dateTaken:y.photo.dates.taken,datePosted:y.photo.dates.posted,takenGranularity:y.photo.dates.takengranularity,isDateTakenUnknown:y.photo.datetakenunknown||"1"===y.photo.datetakenunknown||1===y.photo.datetakenunknown},l={id:y.photo.id,title:y.photo.HTMLMETA["og:title"],noindexfollow:y.photo.owner.noindexfollow,keywords:y.photo.HTMLMETA.keywords,"og:title":y.photo.HTMLMETA["og:title"],"og:description":y.photo.HTMLMETA["og:description"],"og:type":y.photo.HTMLMETA["og:type"],"og:url":y.photo.HTMLMETA["og:url"],"og:image":y.photo.HTMLMETA["og:image"],"og:image:width":y.photo.HTMLMETA["og:image:width"],"og:image:height":y.photo.HTMLMETA["og:image:height"],"flickr_photos:by":y.photo.HTMLMETA["flickr_photos:by"],"flickr_photos:camera":y.photo.HTMLMETA["flickr_photos:camera"],"flickr_photos:sets":y.photo.HTMLMETA["flickr_photos:sets"],"flickr_photos:groups":y.photo.HTMLMETA["flickr_photos:groups"],"flickr_photos:galleries":y.photo.HTMLMETA["flickr_photos:galleries"],"twitter:card":y.photo.HTMLMETA["twitter:card"],"twitter:description":y.photo.HTMLMETA["twitter:description"],"twitter:app:url:iphone":y.photo.HTMLMETA["twitter:app:url:iphone"],"twitter:creator":y.photo.HTMLMETA["twitter:creator"],pinterest:y.photo.HTMLMETA.pinterest},d={id:y.photo.id,isPublic:y.photo.visibility.ispublic,isVisibleByFriends:y.photo.visibility.isfriend,isVisibleByFamily:y.photo.visibility.isfamily,permAddMeta:y.photo.permissions?y.photo.permissions.permaddmeta:0,permComment:y.photo.permissions?y.photo.permissions.permcomment:0},y.photo&&y.photo.notes&&y.photo.notes.note&&o.Array(y.photo.notes.note).forEach(function(o){k.push(T.addOrUpdate({id:o.id,author:o.author,authorName:o.authorname,authorRealName:o.authorrealname,authorIsPro:o.authorispro,authorProBadge:o.proBadge,authorIsDeleted:o.authorisdeleted,left:o.x,top:o.y,width:o.w,height:o.h,text:o.content}))}),g=o.ModelFetchers["flickr-photos-getLocation"].mapResponse(y,x),i.owner=u.addOrUpdate(p),i.engagement=M.addOrUpdate(a),R.addOrUpdate(n),c=m.addOrUpdate(i),f.addOrUpdate(h),w.addOrUpdate(d),v.addOrUpdate({id:i.id,notes:k}),H.addOrUpdate(l),A.addOrUpdate(g),y.photo.contexts&&(r=e.contextsRegistry,P.faves=e.favoriteRegistry,P.gallery=e.galleryRegistry,P.pool=e.groupsPoolRegistry,P.set=e.setRegistry,P.stream=e.photostreamRegistry,(function(e){var t=e.photoModel,s=e.contextRegistries,r=e.contextsResponse,i=e.personRegistry,p=e.contextsRegistry,n=e.photoEngagementRegistry,a=e.photoStatsRegistry,h=e.groupRegistry,d=e.apiParams,l=[];o.Object.each(s,function(e,s){r[s]&&o.Array.each(r[s],function(s){o.APIHelper.response.addContextToRegistry(s,e,i,h),l.push(e.proxy(s.id)),d.context&&(function(){var r,p,h,l,g,c,y,m,u;p=!!(r=e.getValue(s.id,"photoContextList")).hasMinBoundary&&r.hasMinBoundary(),h=!!r.hasMaxBoundary&&r.hasMaxBoundary(),l=r.getList(),c=s.nextphotos,y=s.prevphotos,m=c?o.APIHelper.response.parsePhotos({photos:c.photo,personModelRegistry:i,photoModelRegistry:t.registry,photoEngagementModelRegistry:n,photoStatsModelRegistry:a}):[],((u=y?o.APIHelper.response.parsePhotos({photos:y.photo,personModelRegistry:i,photoModelRegistry:t.registry,photoEngagementModelRegistry:n,photoStatsModelRegistry:a}):[]).length||m.length)&&(g=o.APIHelper.response.addOrReplaceListByContext({model:t,next:m,prev:u.reverse(),current:l,hasMin:p,hasMax:h,numNext:d.num_next,numPrev:d.num_prev})),e.setValue(s.id,"photoContextList",g)})()})}),p.exists(t.id)||(p.add({id:t.id,totalGroups:r.pool?r.pool.length:0,totalSets:r.set?r.set.length:0,totalGalleries:r.gallery?r.gallery.length:0}),p.setValue(t.id,"contexts",l))})({photoModel:c,contextRegistries:P,contextsResponse:y.photo.contexts,personRegistry:u,contextsRegistry:r,photoEngagementRegistry:M,photoStatsRegistry:f,groupRegistry:_,apiParams:s}))}}},"@VERSION@",{requires:["flickr-promise","api-helper","flickr-photos-getLocation-fetcher"],optional:["photo-models","person-models","person-relationship-models","photo-engagement-models","photo-stats-models","photo-geo-models","photo-location-models","photo-head-meta-models","note-models","photo-notes-models","autotag-models","photo-autotags-models"]});YUI.add("flickr-photos-setPerms-updater",function(e,r){"use strict";e.namespace("ModelUpdaters")["flickr-photos-setPerms"]={run:function(s,o){var t=this;return s.nsid=o.getViewer().nsid,e.Promise.all([o.callAPI("flickr.photos.setPerms",s),o.getModelRegistry("photostream-models")]).then(function(e){return t._processResponse(e,s)},e.FetcherErrorLogger(r))},_processResponse:function(e,r){var s=e[0],o=e[1];if(o.attributeSearch({normalizedId:r.nsid},!0).forEach(function(e){o.remove(e)}),r.full_response)return s.photoIdsSent=r.photo_ids,s}}},"@VERSION@",{requires:["flickr-promise"]});YUI.add("flickr-photos-setMeta-updater",function(t,e){"use strict";var o=require("hermes-core/flog")(e);t.namespace("ModelUpdaters")["flickr-photos-setMeta"]={run:function(r,i){var s={};return r.fullResponse?(s.full_response=1,s.photo_ids=r.photoId):s.photo_id=r.photoId,void 0!==r.title&&(s.title=r.title),void 0!==r.description&&(s.description=r.description),t.Promise.all([i.callAPI("flickr.photos.setMeta",s),i.getModelRegistry("photo-models")]).then(function(t){var e=t[0],i=t[1];if(r.fullResponse){if("errors"in e)return e.api="setMeta",e}else{if(!i.exists(r.photoId))throw new Error("[flickr-photos-setMeta-updater] - Photo model can not be updated if it does not exist");e.photo&&e.photo.title&&e.photo.description?i.setValues(r.photoId,{title:e.photo.title.content,description:e.photo.description.content}):o.warn("No updated data returned from API.")}},function(t){throw r.fullResponse&&(t.photoIds=r.photoId,t.returnApi="setMeta"),t}).then(null,t.FetcherErrorLogger(e))}}},"@VERSION@",{requires:["flickr-promise"],optional:[]});